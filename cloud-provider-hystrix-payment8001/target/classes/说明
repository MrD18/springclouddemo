此服务加熔断机制:在service层的方法中加入 PaymentService
@HystrixCommand(fallbackMethod = "paymentCircuitBreaker_fallback",commandProperties = {
            @HystrixProperty(name = "circuitBreaker.enabled",value = "true"),  // 是否开启熔断
            @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold",value = "10"), // 请求次数
            @HystrixProperty(name = "circuitBreaker.sleepWindowInMilliseconds",value = "10000"), // 时间窗口期
            @HystrixProperty(name = "circuitBreaker.errorThresholdPercentage",value = "60"), // 失败率达到多少后跳闸
    })

    测试结果: 输入整数 OK
            输入负数 报错
            一直输入负数 达到他的阈值, 然后输入整数 仍然报错
            等待一会 输入整数 就OK了
            充分体现熔断的作用: 服务先熔断, 降级方法,最后会慢慢的恢复

